{
	"info": {
		"_postman_id": "4e64da8e-6f4c-4992-a298-c6370717eb25",
		"name": "mock",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "reset mockserver",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "972f8626-29a9-44d2-875a-f10a60e970c8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/reset",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"reset"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST electrical permit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "457d8728-e91c-4009-a5e3-b3dae120118d",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/electrical-permit\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"type\": \"JSON\",\n            \"json\": \"{\\\"data\\\":\\\"testingData\\\"}\",\n            \"matchType\": \"STRICT\"\n        }\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"IN_PROGRESS\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET electrical IN_PROGRESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30898b7e-20d4-41bf-9d0b-5a83de4262d8",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/electrical-permit\",\n        \"method\": \"GET\"\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"IN_PROGRESS\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET electrical APPROVED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30898b7e-20d4-41bf-9d0b-5a83de4262d8",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/electrical-permit/approved\",\n        \"method\": \"GET\"\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"APPROVED\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET electrical DENIED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30898b7e-20d4-41bf-9d0b-5a83de4262d8",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/electrical-permit/denied\",\n        \"method\": \"GET\"\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"DENIED\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST structural permit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "457d8728-e91c-4009-a5e3-b3dae120118d",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/structural-permit\",\n        \"method\": \"POST\",\n        \"body\": {\n            \"type\": \"JSON\",\n            \"json\": \"{\\\"data\\\":\\\"testingData\\\"}\",\n            \"matchType\": \"STRICT\"\n        }\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"IN_PROGRESS\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET structural APPROVED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30898b7e-20d4-41bf-9d0b-5a83de4262d8",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/structural-permit/approved\",\n        \"method\": \"GET\"\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"APPROVED\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET structural IN_PROGRESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30898b7e-20d4-41bf-9d0b-5a83de4262d8",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/structural-permit\",\n        \"method\": \"GET\"\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"IN_PROGRESS\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET structural DENIED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30898b7e-20d4-41bf-9d0b-5a83de4262d8",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"httpRequest\": {\n        \"path\": \"/services/structural-permit/denied\",\n        \"method\": \"GET\"\n    },\n    \"httpResponse\": {\n        \"statusCode\": 200,\n        \"body\": \"{\\\"status\\\":\\\"DENIED\\\"}\"\n    }\n}"
				},
				"url": {
					"raw": "http://{{mockserver_host}}:{{mockserver_port}}/mockserver/expectation",
					"protocol": "http",
					"host": [
						"{{mockserver_host}}"
					],
					"port": "{{mockserver_port}}",
					"path": [
						"mockserver",
						"expectation"
					]
				}
			},
			"response": []
		}
	]
}